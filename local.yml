version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_solr_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: panda_local_django
    restart: on-failure
    depends_on:
      - postgres
      - mailhog
      - elasticsearch
#      - solr
    volumes:
      - .:/app
      - ~/.ipython:/root/.ipython
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: panda_production_postgres
    ports:
      - 5435:5432
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: panda_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: panda_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: panda_local_flower
    ports:
      - "5555:5555"
    command: /start-flower

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: panda_local_node
    depends_on:
      - django
    volumes:
      - .:/app
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - "3000:3000"
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - "3001:3001"

  elasticsearch:
    image: elasticsearch:2
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: kibana:2
    ports:
      - "5601:5601"
    links:
      - elasticsearch

#  solr:
#    build:
#      context: .
#      dockerfile: ./compose/local/solr/Dockerfile
#    image: panda_local_solr
#    ports:
#      - "8983:8983"
#    volumes:
#      - local_solr_data:/var/solr
#      - ./schema.xml:/opt/solr/example/solr/panda/conf/schema.xml
#    env_file:
#      - ./.envs/.local/.django
#    command:
#      - solr-precreate
#      - gettingstarted

  initial-data:
    image: oscarcommerce/django-oscar-sandbox
    volumes:
      - ./panda/media:/app/sandbox/public/media/
    user: root
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    command: bash -c "cd /app && make sandbox"
    depends_on:
      - postgres
